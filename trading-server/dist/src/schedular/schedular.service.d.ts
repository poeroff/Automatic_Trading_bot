import { UpdateSchedularDto } from './dto/update-schedular.dto';
import { SessionService } from './SessionService';
import { ClientProxy } from '@nestjs/microservices';
import { KoreanStockCode } from 'src/stock-data/entities/KoreanStockCode.entity';
import { Repository } from 'typeorm';
import { DayStockData } from 'src/stock-data/entities/DayStockData.entity';
import { WeekStockData } from 'src/stock-data/entities/WeekStockData.entity';
export declare class SchedularService {
    private readonly koreastockcodeRepository;
    private readonly daystockdataRepository;
    private readonly weekstockdataRepository;
    private readonly sessionService;
    private readonly redisClient;
    constructor(koreastockcodeRepository: Repository<KoreanStockCode>, daystockdataRepository: Repository<DayStockData>, weekstockdataRepository: Repository<WeekStockData>, sessionService: SessionService, redisClient: ClientProxy);
    today: Date;
    year: string;
    month: string;
    day: string;
    todayStr: string;
    CreateAuthHashKey(url: any, headers: any, data: any): Promise<void>;
    CreateAccessToken(url: any, headers: any, data: any): Promise<void>;
    CreateWebSocketToken(url: any, headers: any, data: any): Promise<void>;
    getDayStockData(url: any, headers: any): Promise<void>;
    getWeekStockData(url: any, headers: any): Promise<void>;
    StockData(url: any, headers: any, data: any): Promise<any>;
    findAll(): string;
    findOne(id: number): string;
    update(id: number, updateSchedularDto: UpdateSchedularDto): string;
    remove(id: number): string;
}
